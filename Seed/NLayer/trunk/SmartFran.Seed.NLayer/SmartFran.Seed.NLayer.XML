<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartFran.Seed.NLayer</name>
    </assembly>
    <members>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.CallbacksSubscriptionBase">
            <summary>
            Base class for callback subscription service classes. Implements basic functionality such as handling channel closing and faults events.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.CallbacksSubscriptionBase.ChannelClosing(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.ServiceModel.ICommunicationObject.Closing"/> event
            </summary>
            <param name="sender">
            The sender. The <see cref="T:System.ServiceModel.IContextChannel"/> closing.
            </param>
            <param name="eventArgs">
            The eventArgs.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.CallbacksSubscriptionBase.ChannelFaulted(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.ServiceModel.ICommunicationObject.Faulted"/> event.
            </summary>
            <param name="sender">
            The sender. The <see cref="T:System.ServiceModel.IContextChannel"/> faulted.
            </param>
            <param name="eventArgs">
            The eventArgs.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.CallbacksSubscriptionBase.Disconnect(System.ServiceModel.IContextChannel)">
            <summary>
            Disconnects the channel. Method invoked when the channel is either normally or abnormally closed. 
            </summary>
            <param name="contextChannel">
            The context channel.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.CallbacksSubscriptionBase.SetupChannelEvents(System.ServiceModel.IContextChannel)">
            <summary>
            Connects events handlers to the <see cref="E:System.ServiceModel.ICommunicationObject.Closing"/> and <see cref="E:System.ServiceModel.ICommunicationObject.Faulted"/> events to handle them properly.
            </summary>
            <param name="contextChannel">
            The context channel.
            </param>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.NLayerFault">
            <summary>
            Base class of faults generated by any N2-Labo WCF services
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.#ctor(SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.ServiceModel.NLayerFault"/> class.
            </summary>
            <param name="laboException">
            The labo exception.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.AsException">
            <summary>
            Creates an exception that represents the fault contract
            </summary>
            <returns>
            An exception that maps the fault detail
            </returns>
        </member>
        <member name="P:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.IssueId">
            <summary>
            Gets IssueId.
            </summary>
        </member>
        <member name="P:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.Message">
            <summary>
            Gets Message.
            </summary>
        </member>
        <member name="P:SmartFran.Seed.NLayer.ServiceModel.NLayerFault.ExceptionType">
            <summary>
            Gets ExceptionType.
            </summary>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.ICallbacksSubscription">
            <summary>
            Generic base contract to normalize the subscription and unsubscription to callbacks in WCF/Web services.
            </summary>
            <remarks>
            Inherit your service's callback subscription contract from this interface and decorate it with the ServiceContract attribute
            with your custom callbacks interface. Example: 
              [ServiceContract(CallbackContract = typeof(IMyServiceCallbacks), SessionMode = SessionMode.Required)]
            </remarks>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ICallbacksSubscription.Subscribe">
            <summary>
            Adds the underlying service's callback client to the subscription list.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ICallbacksSubscription.Unsubscribe">
            <summary>
            Removes the underlying service's callback client from the subscription list.
            </summary>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.ErrorHandler">
            <summary>
            Error handler implementation to handle erros almost silently in services
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandler.HandleError(System.Exception)">
            <summary>
            Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases. 
            </summary>
            <returns>
            true if  should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single"/>; otherwise, false. The default is false.
            </returns>
            <param name="error">
            The exception thrown during processing.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
            <summary>
            Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1"/> that is returned from an exception in the course of a service method.
            </summary>
            <param name="error">
            The <see cref="T:System.Exception"/> object thrown in the course of the service operation.
            </param>
            <param name="version">
            The SOAP version of the message.
            </param>
            <param name="fault">
            The <see cref="T:System.ServiceModel.Channels.Message"/> object that is returned to the client, or service, in the duplex case.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandler.GetFaultDetail(System.Reflection.MethodInfo,System.ServiceModel.Description.FaultDescriptionCollection,System.Exception)">
            <summary>
            Looks up a fault details type and create is by means of a fault mapper (<see cref="T:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute"/>) or defaults.
            </summary>
            <param name="method">
            The method where the error was trap
            </param>
            <param name="faultContracts">
            The collection of faultContracts declared in the given method
            </param>
            <param name="error">
            The actual error to convert into a fault
            </param>
            <returns>
            An object being the detail of a fault that represents the given error.
            </returns>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlerClientInspector">
            <summary>
            Inspects messages received from the server detecting faults and raising the corresponding original exception produced on server side when possible.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlerClientInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary>
            Enables inspection or modification of a message before a request message is sent to a service.
            </summary>
            <returns>
            The object that is returned as the argument of the method. This is null if no correlation state is used.The best practice is to make this a to ensure that no two objects are the same.
            </returns>
            <param name="request">
            The message to be sent to the service.
            </param>
            <param name="channel">
            The  client object channel.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlerClientInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.
            </summary>
            <param name="reply">
            The message to be transformed into types and handed back to the client application.
            </param>
            <param name="correlationState">
            Correlation state data.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlerClientInspector.ReadFaultDetail(System.ServiceModel.Channels.Message)">
            <summary>
            Restores a fault contract detail found in the given message.
            </summary>
            <param name="replyWithFault">
            The reply With Fault.
            </param>
            <returns>
            An object that represents the fault detail if found, or null otherwise.
            </returns>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute">
            <summary>
            Extends a service behavior to add a custom error handler
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Implement to confirm that the contract and endpoint can support the contract behavior.
            </summary>
            <param name="contractDescription">
            The contract to validate.
            </param>
            <param name="endpoint">
            The endpoint to validate.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
            <summary>
            Implements a modification or extension of the client across a contract.
            </summary>
            <param name="contractDescription">
            The contract description to be modified.
            </param>
            <param name="endpoint">
            The endpoint that exposes the contract.
            </param>
            <param name="dispatchRuntime">
            The dispatch runtime that controls service execution.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across a contract.
            </summary>
            <param name="contractDescription">
            The contract description for which the extension is intended.
            </param>
            <param name="endpoint">
            The endpoint.
            </param>
            <param name="clientRuntime">
            The client runtime.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Configures any binding elements to support the contract behavior.
            </summary>
            <param name="contractDescription">
            The contract description to modify.
            </param>
            <param name="endpoint">
            The endpoint to modify.
            </param>
            <param name="bindingParameters">
            The objects that binding elements require to support the behavior.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Implement to pass data at runtime to bindings to support custom behavior.
            </summary>
            <param name="endpoint">
            The endpoint to modify.
            </param>
            <param name="bindingParameters">
            The objects that binding elements require to support the behavior.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across an endpoint.
            </summary>
            <param name="endpoint">
            The endpoint that is to be customized.
            </param>
            <param name="clientRuntime">
            The client runtime to be customized.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Implements a modification or extension of the service across an endpoint.
            </summary>
            <param name="endpoint">
            The endpoint that exposes the contract.
            </param>
            <param name="endpointDispatcher">
            The endpoint dispatcher to be modified or extended.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Implement to confirm that the endpoint meets some intended criteria.
            </summary>
            <param name="endpoint">
            The endpoint to validate.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Provides the ability to pass custom data to binding elements to support the contract implementation.
            </summary>
            <param name="serviceDescription">
            The service description of the service.
            </param>
            <param name="serviceHostBase">
            The host of the service.
            </param>
            <param name="endpoints">
            The service endpoints.
            </param>
            <param name="bindingParameters">
            Custom objects to which binding elements have access.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.
            </summary>
            <param name="serviceDescription">
            The service description.
            </param>
            <param name="serviceHostBase">
            The host that is currently being built.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.
            </summary>
            <param name="serviceDescription">
            The service description.
            </param>
            <param name="serviceHostBase">
            The service host that is currently being constructed.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.ApplyDispatchBehavior(System.ServiceModel.Dispatcher.ChannelDispatcher)">
            <summary>
            The apply dispatch behavior.
            </summary>
            <param name="dispatcher">
            The dispatcher.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.ErrorHandlingBehaviorAttribute.AppyClientBehavior(System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            The appy client behavior.
            </summary>
            <param name="runtime">
            The runtime.
            </param>
        </member>
        <member name="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException">
            <summary>
            Exception raised when a conflict between cached data and stored data is detected when attempting to update, tipically apply changes, to the underlying data store.
            </summary>
        </member>
        <member name="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException">
            <summary>
            Generic exception generated by applications an services of N2-Labo.
            It is also the base class for any exception generated in the scope of N2-Labo.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The message that describes the error. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> class. 
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.ArgumentNullException"/> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null. 
            </exception>
            <exception cref="P:System.Exception.HResult">
            The class name is null or <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> is zero (0). 
            </exception>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>
            A string representation of the current exception.
            </returns>
            <filterpriority>1</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/></PermissionSet>
        </member>
        <member name="P:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException.IssueId">
            <summary>
            Gets IssueId that identifies the instance of the error described in the exception.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The message that describes the error. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException"/> class. 
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null. 
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). 
            </exception>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute">
            <summary>
            Maps a type of <see cref="T:System.Exception"/> to a custom fault.
            </summary>
        </member>
        <member name="F:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.faultConstructor">
            <summary>
            The fault constructor.
            </summary>
        </member>
        <member name="F:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.faultConstructorIsParameterless">
            <summary>
            The fault constructor is parameterless.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute"/> class. 
            </summary>
            <param name="exceptionType">
            The exception Type.
            </param>
            <param name="faultType">
            The fault Type.
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.Map(System.Exception)">
            <summary>
            Maps the given input <paramref name="exception"/> to its corresponding fault.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <returns>
            A FaultException.
            </returns>
        </member>
        <member name="P:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.ExceptionType">
            <summary>
            Gets ExceptionType.
            </summary>
        </member>
        <member name="P:SmartFran.Seed.NLayer.ServiceModel.FaultMapAttribute.FaultType">
            <summary>
            Gets FaultType.
            </summary>
        </member>
        <member name="T:SmartFran.Seed.NLayer.Diagnostics.Failures">
            <summary>
            A class where system exceptions are customized and decorated hiding its
            sensitive information before throwing it to the client
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.BusinessConcurrencyConflict(System.Object,System.Object)">
            <summary>
            General error raised by the business rule engine when it detects conflict in an 
            entity changed in its cache against the already stored entity in its underlying repository.
            </summary>
            <param name="clientTarget">
            The client target.
            </param>
            <param name="storeTarget">
            The store target.
            </param>
            <returns>
            A <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessConcurrencyException"/> describing the error and identifying the issue.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.BusinessOperationFailed">
            <summary>
            General error raised by the business rule engine when it cannot operate normally due to error that it cannot handle.
            </summary>
            <remarks>
            This kind of errors can be temporally or can persist after retries, in this las case it requires a system administrator to solve the problem.
            </remarks>
            <returns>
            A <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException"/> describing the error and identifying the issue.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.BusinessRuleBreached(System.Object)">
            <summary>
            General error raised by the business rule enforcement engine when it detects a breach when applying the rules.
            </summary>
            <param name="target">
            The target object failing the business rule validation.
            </param>
            <returns>
            A <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException"/> describing the error and identifying the issue.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.CreateIssuedException``1(System.String)">
            <summary>
            Creates an exception and identifies the problem with an issue id that attaches to just created exception.
            </summary>
            <param name="exceptionMessage">
            The exceptionMessage.
            </param>
            <typeparam name="TException">
            The type of exception to create. It must be a successor of<see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/>
            </typeparam>
            <returns>
            An exception of the<see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/>hierarchy containing an issue id.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.CreateIssuedException``1(System.String,System.Exception,System.Boolean,System.Boolean)">
            <summary>
            Creates an exception of the given type and attachs to it an issue identification to facilitate the traceability of the error.
            </summary>
            <param name="exceptionMessage">
            The exception message.
            </param>
            <param name="innerException">
            The inner exception.
            </param>
            <param name="attachInnerException">
            The attach Inner Exception. Use with caution to avoid pass sensitive information to the client side.
            </param>
            <param name="logException">
            The log exception.
            </param>
            <typeparam name="TException">
            The type of exception to create.
            </typeparam>
            <returns>
            An exception of type <typeparamref name="TException"/> containing the inner exception and an unique issue id.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.UnknownOrUnhandledError(System.Exception)">
            <summary>
            Error raised when the system traps an unexpected error not handled properly.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <returns>
            A <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> describing the error and identifying the issue.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.DependencyMapMissingOrInvalidType``1(System.Exception,System.Boolean)">
            <summary>
            Error raised by a dependency mapper when it fails to get a type requested by a client. 
            The inner exception is the actual cause of the error and it belongs to the actual underlying mapper that can vary.
            </summary>
            <typeparam name="TSearchedType">
            The type to be resolved by dependency map.
            </typeparam>
            <param name="innerException">
            The inner Exception.
            </param>
            <param name="logInnerException">
            The log Inner Exception.
            </param>
            <returns>
            An  <see cref="T:System.InvalidOperationException"/> describing the error.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.DependencyMapConfigurationError(System.String,System.Exception,System.Boolean)">
            <summary>
            Error raised by a dependency map when it fails to load or apply a configuration to its underlying dependency container.
            </summary>
            <param name="containerConfigurationName">
            The container Configuration Name.
            </param>
            <param name="innerException">
            The inner Exception.
            </param>
            <param name="logInnerException">
            The log Inner Exception.
            </param>
            <returns>
            An  <see cref="T:System.InvalidOperationException"/> describing the error.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.CheckLogException``1(System.Boolean,System.Exception,System.String)">
            <summary>
            Writes an exception raised to the log and the corresponding <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> used to replace it.
            </summary>
            <param name="logException">
            The log Exception.
            </param>
            <param name="exception">
            The exception.
            </param>
            <param name="issueId">
            The issue Id.
            </param>
            <typeparam name="TException">
            The type of <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.NLayerException"/> that replaces de system exception.
            </typeparam>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Failures.CreateIssue">
            <summary>
            The create issue.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:SmartFran.Seed.NLayer.ServiceModel.Faults">
            <summary>
            Implements facilities to handle N2-Labo well known exception and convert them to faults, at server side, and back to original exception once in the client side.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.Faults.UnknownOrUnhandledError(System.Exception)">
            <summary>
            Creates a default fault detail to communicate to client side an unhandled server side error.
            </summary>
            <param name="exception">
            The exception.
            </param>
            <returns>
            A <see cref="T:SmartFran.Seed.NLayer.ServiceModel.NLayerFault"/> describing the error but hidding sensitive information.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.Faults.FaultDeserializationFailed(System.ServiceModel.Channels.Message,System.Exception)">
            <summary>
            Error raised when a client, tipically client message inspector interface implementor, fails to deserialize the detail of a fault thrown by a server.
            </summary>
            <param name="messageReply">
            	The messageReply.
            </param>
            <param name="deserializationException">
            The deserialization Exception.
            </param>
            <returns>
            An exception describing the problem.
            </returns>
        </member>
        <member name="M:SmartFran.Seed.NLayer.ServiceModel.Faults.UnknownFaultDetailFromServer(System.Object)">
            <summary>
            Error raised when a client detect an unknown fault detail from the server. The fault was successfully deserialized error handling mechanims at the client side cannot recreate the original exception.
            </summary>
            <param name="faultDetail">
            The fault detail.
            </param>
            <returns>
            An exception describing the problem.
            </returns>
        </member>
        <member name="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException">
            <summary>
            Exception raised when a severe error is detected by a business logic, that prevent them to execute normally. 
            This kind of exceptions shows a problem preventing the application of the business logic, if the problem persist after retries then there is requiered the intervention of system administrators.
            </summary>
            <remarks>
            Such an error can be a database related connection error, or an metadata inconsistency, timeouts at the business-store layers, etc.
            </remarks>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The message that describes the error. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessOperabilityException"/> class. 
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null. 
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). 
            </exception>
        </member>
        <member name="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException">
            <summary>
            Exception raised by the business logic when it detects / diagnoses a violation of business rules and can provide information about the rule(s) violated and possible solution.
            </summary>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The message that describes the error. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException"/> class. 
            </summary>
            <param name="issueId">
            The issue Id.
            </param>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SmartFran.Seed.NLayer.Diagnostics.Exceptions.BusinessRuleException"/> class. 
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null. 
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). 
            </exception>
        </member>
    </members>
</doc>
